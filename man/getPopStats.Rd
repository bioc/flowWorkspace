% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GatingHierarchy_Methods.R,
%   R/GatingSet_Methods.R, R/GatingSetList_Methods.R
\docType{methods}
\name{getProp,GatingHierarchy,character-method}
\alias{getProp,GatingHierarchy,character-method}
\alias{getProp}
\alias{getTotal,GatingHierarchy,character-method}
\alias{getTotal}
\alias{getPopStats,GatingHierarchy-method}
\alias{getPopStats,GatingSet-method}
\alias{getPopStats}
\alias{getPopStats,GatingSetList-method}
\title{Return a table of population statistics for all populations in a GatingHierarchy/GatingSet
  or the population proportions or the total number of events of a node (population) in a GatingHierarchy}
\usage{
\S4method{getProp}{GatingHierarchy,character}(x, y, xml = FALSE)

\S4method{getTotal}{GatingHierarchy,character}(x, y, xml = FALSE)

\S4method{getPopStats}{GatingHierarchy}(x, path = "auto", ...)

\S4method{getPopStats}{GatingSet}(x, statistic = c("freq", "count"),
  xml = FALSE, subpopulations = NULL, format = c("long", "wide"),
  path = "auto", ...)

\S4method{getPopStats}{GatingSetList}(x, format = c("long", "wide"), ...)
}
\arguments{
\item{x}{A \code{GatingHierarchy} or \code{GatingSet}}

\item{y}{\code{character} node name or path}

\item{xml}{\code{logical} indicating whether the statistics come from xml (if parsed from xml workspace) or from openCyto.}

\item{path}{\code{character} see \link{getNodes}}

\item{...}{Additional arguments passed to \link{getNodes}}

\item{statistic}{\code{character} specifies the type of population statistics to extract.(only valid when format is "wide"). Either "freq" or "count" is currently supported.}

\item{subpopulations}{\code{character} vector to specify a subset of populations to return. (only valid when format is "long")}

\item{format}{\code{character} value of c("wide", "long") specifing whether to origanize the output in long or wide format}
}
\value{
getPopStats returns a \code{data.frame} with columns for the population name, xml derived counts, openCyto derived counts, and the population proportions (relative to their parent pouplation).
getProp returns  a population frequency \code{numeric}.
getTotal returns a \code{numeric} value of the total number of elements in the population.
}
\description{
getProp calculates the population proportion (events in the gate / events in the parent population) associated with a node in the \code{GatingHierarchy}.
getPopStats is more useful than getPop. Returns a table of population statistics for all populations in a \code{GatingHierarchy}/\code{GatingSet}. Includes the xml counts, openCyto counts and frequencies.
getTotal returns the total number of events in the gate defined in the GatingHierarchy object
}
\details{
getPopStats returns a table population statistics for all populations in the gating hierarchy. The output is useful for verifying that the import was successful, if the xml and openCyto derived counts don't differ much (i.e. if they have a small coefficient of variation.) for a GatingSet, returns a matrix of proportions for all populations and all samples
getProp returns the proportion of cells in the gate, relative to its parent.
getTotal returns the total number of events included in this gate. The contents of "thisTot" variable in the "metadata" environment of the \code{nodeData} element associated with the gating tree and gate / population.
}
\examples{
        \dontrun{
        #gh is a GatingHierarchy
        getPopStats(gh);
        #proportion for the fifth population
        getProp(gh,getNodes(gh)[5])
        getTotal(gh,getNodes(gh,tsort=T)[5])

        #gs is a GatingSet
        getPopStats(gs)
        #optionally output in long format as a data.table
        getPopStats(gs, format = "long", path = "auto")
        #only get stats for a subset of populations
        getPopStats(gs, format = "long", subpopulations = getNodes(gs)[4:6])
        }
}
\seealso{
\code{\link{getNodes}}
}
