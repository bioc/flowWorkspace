% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/merge_GatingSet.R
\name{standardize-GatingSet}
\alias{standardize-GatingSet}
\alias{merge-GatingSet}
\title{The tools to standardize the tree structures and channel names.}
\description{
groupByTree(x)

groupByChannels(x)

checkRedundantNodes(x)

dropRedundantNodes(x, toRemove)

dropRedundantChannels(gs)

updateChannels(gs, map, all = TRUE)

insertGate(gs, gate, parent, children)

setNode(x, y, FALSE)
}
\details{
In order to merge multiple GatingSets into single \link{GatingSetList}, the gating trees and channel names must be
consistent. These functions help removing the discrepancies and standardize the GatingSets so that they are mergable.

\link{groupByTree} splits the GatingSets into groups based on the gating tree structures.

\link{groupByChannels} split GatingSets into groups based on their flow channels.

\link{checkRedundantNodes} returns the terminal(or leaf) nodes that makes the gating trees to be different among GatingSets and thus can be considered to remove as redundant nodes.

\link{dropRedundantNodes} removes the terminal(or leaf) nodes that are detected as redundant by \code{checkRedundantNodes}.

\link{dropRedundantChannels} remove the redundant channels that are not used by any gate defined in the GatingSet.

\link{updateChannels} modifies the channel names in place. (Usually used to standardize the channels among GatingSets due to the letter case discrepancies or typo).

\link{insertGate} inserts a dummy gate to the GatingSet. Is is useful trick to deal with the extra non-leaf node in some GatingSets that can not be simply removed by \code{dropRedundantNodes}

\link{setNode} hide a node/gate in a GatingSet. It is useful to deal with the non-leaf node that causes the tree structure discrepancy.
}
